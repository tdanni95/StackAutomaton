<div class="automatonForm">
    <form onsubmit="@SubmitForm" class="@FormClass">
        <div>
            <label>Input</label>
            <input @bind="@CurrentValue" class="form-control" required />
        </div>
        <div class="mt-2">
            <p><strong>Converted input:</strong></p>
            <p>@Formatted</p>
        </div>
        <div class="mt-2">
            <label>Input file</label>
            <InputFile OnChange="@InvokeFileChange" class="form-control"></InputFile>

        </div>
        <div class="mt-2 d-grid">
            <button onclick="@Walidate" class="btn btn-outline-success">Solve</button>
        </div>
    </form>
</div>
@code {
    [Parameter] public EventCallback<InputFileChangeEventArgs> FileInputChangeMethod { get; set; }
    [Parameter] public EventCallback<string> FormSubmit { get; set; }
    [Parameter] public string Formatted { get; set; }
    private void InvokeFileChange(InputFileChangeEventArgs e)
    {
        if (e.File.ContentType != "text/csv") return;
        FileInputChangeMethod.InvokeAsync(e);
    }
    private string CurrentValue = "";
    private string FormClass = "";

    private async void SubmitForm()
    {
        await FormSubmit.InvokeAsync(CurrentValue);
    }

    private void Walidate()
    {
        FormClass = "was-validated";
    }

}
